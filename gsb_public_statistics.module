<?php

/**
 * @file gsb_public_statistics.module
 */

/**
 * Implements hook_menu().
 */
function gsb_public_statistics_menu() {
  $items = array();
  $items['admin/config/gsb/statistics'] = array(
    'title' => 'GSB Public Statistics Setting',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_public_statistics_settings_form'),
    'access arguments' => array('administer nodes'),
  );

  $items['admin/config/gsb/statistics/statistics-email'] = array(
    'title' => 'Email Statistics Report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_public_statistics_send_status_mail'),
    'access arguments' => array('administer nodes'),
  );

  return $items;
}

/**
 * Admin configuration form for gsb cron emails
 */
function gsb_public_statistics_settings_form($form, $form_state) {

  $form['gsb_public_statistics_to_email'] = array(
    '#title' => 'Email(To Address)',
    '#type' => 'textfield',
    '#default_value' => variable_get('gsb_public_statistics_to_email', NULL),
    '#description' => t('use comma separated values. sends out daily email to the address'),
  );

  return system_settings_form($form, $form_state);
}

/**
 * Implements hook_cron().
 */
function gsb_public_statistics_cron() {
  gsb_public_statistics_send_status_mail();
}

/**
 * Implements hook_mail().
 */
function gsb_public_statistics_mail($key, &$message, $params) {
  switch ($key) {
    case 'statistics':
      //$message['Reply-To'] = $params['Reply-To'];
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      //$message['headers']['Reply-To'] = $params['Reply-To'];
      break;
    }
}

/**
 * Sends node status email
 */
function gsb_public_statistics_send_status_mail() {
  // Get results for published nodes
  $published_rows = array();
  $result = db_query('SELECT type, count(*) AS total FROM {node} WHERE status = 1 GROUP BY type');
  while ($record = $result->fetchObject()) {
    $published_rows[] = array($record->type, $record->total);
  }

  // Wrap published data into table format
  $body[] = theme('table', array(
    'header' => array('<b>Published Nodes</b>',''),
    'rows' => $published_rows,
    'attributes' => array('width' => '100%')
  ));

  // Save the json format for published values
  variable_set('gsb_public_statistics_published_row_json', drupal_json_encode($published_rows));

  // Get results for unpublished nodes
  $unpublished_rows = array();
  $result = db_query('SELECT type, count(*) AS total FROM {node} WHERE status = 0 GROUP BY type');
  while ($record = $result->fetchObject()) {
    $unpublished_rows[] = array($record->type, $record->total);
  }

  // Wrap unpublished data into table format
  $body[] = theme('table', array(
    'header' => array('<b>Unpublished Nodes</b>',''),
    'rows' => $unpublished_rows,
    'attributes' => array('width' => '100%')
  ));

  // Save the json format for unpublished values
  variable_set('gsb_public_statistics_unpublished_row_json', drupal_json_encode($unpublished_rows));

  // Get the mailing values.
  $eol = variable_get('mail_line_endings', MAIL_LINE_ENDINGS);
  $subject = 'GSB Public - Statistics';
  $to = variable_get('gsb_public_statistics_to_email', NULL);
  $from = variable_get('site_mail', 'webmaster@gsb.stanford.edu');

  $body = implode("<br />$eol<br />$eol", $body);

  // Set the mail parameters
  $params = array(
    'subject' => $subject,
    'body' => check_markup(
       $body,
      'gsb_html_text'
    ),
  );

  // Mail the gsb public statistics.
  if (drupal_mail('gsb_public_statistics', 'statistics', $to, language_default(), $params, $from)) {
    drupal_set_message(t('GSB public statistics was sent.'));
  }
  else {
    watchdog('gsb_public_statistics', 'There was an error sending mail.');
  }
}
